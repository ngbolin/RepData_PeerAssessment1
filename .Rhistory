by_GDP_quantiles <- mutate(by_GDP, GDPGroups = cut2(Gross.domestic.product.2012, g = 5))
View(by_gdp)
View(by_GDP)
by_GDP_quantiles <- mutate(by_gdp, GDPGroups = cut2(Gross.domestic.product.2012, g = 5))
View(by_gdp)
View(by_GDP_quantiles)
table(by_GDP_quantiles$GDPGroups)
table(by_GDP_quantiles$GDPGroups, by_GDP_quantiles$Income.Group)
swirl()
library(swirl)
swirl()
students
?gather
father(students, sex, count, -grade)
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, value)
res <- gather(students2, sex_class, count, -grade)
ewa
res
res <- gather(students2, count, sex_class -grade)
res <- gather(students2, count, sex_class, -grade)
res
rest <- gather(students2, count, sex_class, -grade)
View(rest)
View(res)
res <- gather(students2, sex_class, count, -grade)
?separate
separate(data = res, col = sex_class, into = c("sex", "class"))
View(students2)
submit()
submit()
submit()
students
students3
?gather()
submit()
submit()
submit()
submit()
?spread()
?spread
?spread
submit()
submit()
View(students3)
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
exit()
quit()
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
library(jpeg)
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
img <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
img <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
img <- read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
img <- read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
d2= Sys.date()
d2= sys.date()
library(Sys)
install.packages("Sys")
install.packages("sys")
library(sys)
d2 = Sys.date()
d2 = sys.date()
d2 = Sys.Date()
format(d2, "%A %B")
?hist
?abline
?lwd
?par
install.packages("lattice")
install.packages("ggplot2")
library(ggplot2)
data(mpg)
qplot(displ, hwy, data= mpg)
x <- norm(100)
x <- rnorm(100)
hist(x)
x <- rnorm(100)
hist(x)
y <- rnorm(100)
plot(x, y)
example("points")
plot(x, y)
x <- rnorm(100)
plot(x, y)
par(mar = c(5,4,4,2))
plot(x, y)
title("Scatterplot")
par(mar = c(5,4,4,2))
par("mar")
par(mar = c(5,4,4,2))
par(
)
par(mfrow = c(1, 2))
z <- rpois(100, 2)
plot(x, y, pch = 20)
plot(x, z, pch = 19)
par(mfrow = c(1, 1))
plot(x, z, pch = 19)
y <- x + rnorm(100)
g <- gl(2, 50, labels = c("Men", "Women"))
str(g)
plot(x, y)
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
library(datasets)
mpg <- mpg
mpg <- data(mpg)
mpg <- datasets(mpg)
mpg <- dataset(mpg)
mpg <- data(mpg)
df <- mtcars
mean(df$mpg)
seq(0, 1, length = 4)
?cut
a <- c(1, 2, 3, 4, 5)
cut(a, c(0, 0.25, 0.5, 0.75, 1))
?quantile
quantile(a, probs = c(0, 0.25, 0.5, 0.75, 1))
b <- quantile(a, probs = c(0, 0.25, 0.5, 0.75, 1))
c <- cut(a, b)
c
levels(c)
length(c)
library(nlme)
library(lattice)
xyplot(weight ~ time | Diet, BodyWeight)
xyplot(weight ~ time | Diet, Body Weight)
xyplot(weight~time | Diet, Body Weight)
xyplot(weight ~ Time | Diet, Body Weight)
xyplot(weight ~ Time | Diet, BodyWeight)
lattice
?lattice
?panel.lpoints
p <- xyplot(weight ~ Time | Diet, BodyWeight)
print(p)
?splom
?par()
?trellis.par.set()
library(swirl)
swirl()
dim(pollution)
summary(pollution$pm25)
ppm
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h=12)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12)
abline(v = 12, lwd = 2)
abline(v = 12, lwd = 4, col = "magenta")
abline(v = median(ppm), col = "magenta", lwd = 4)
colnames(pollution)
names(pollution)
table(region)
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main - "Number of Counties in Each Region")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(ppm ~ pollution$region, data = pollution, col = "red")
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow = c(2,1), mar = c(4, 4, 2, 1))
subset(pollution, region = "east")
subset(pollution, region == "east")
subset(pollution,region == "east")
east <- subset(pollution,region == "east")
head(east)
hist(east, col = "green")
hist(east$pm25, col = "green")
east <- subset(pollution,region == "west")
hist(subset(pollution, region == "west")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
abline(h = 12, lwd = 2, lty = 2)
with(pollution, plot(latitude, ppm), col = pollution$region)
plot(latitude, ppm), col = pollution$region)
plot(latitude, ppm, col = pollution$region)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1,2), mar = c(5, 4, 2, 1))
with(east, plot(latitude, pm25))
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
?Devices
plot(eruptions, waiting)
plot(eruptions, waiting)
plot(faithful$eruptions, faithful$waiting)
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file = "myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, file = "geyserplot.png")
dev.off()
?heatmap
rep(1:3, each = 3)
?heatmaps()
?heatmap
set.seed(1234)
x <- rnorm(12, mean = (rep(1:3), each = 4), sd = 0.2
x <- rnorm(12, mean = (rep(1:3), each = 4), sd = 0.2)
x <- rnorm(12, mean = rep(1:3), each = 4, sd = 0.2)
x <- rnorm(12, mean = (rep(1:3), each = 4), sd = 0.2)
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1,2,1), each = 4), sd = 0.2)
dataFrame <- data.frame(x,y)
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
View(dataFrame)
heatmap(dataMatrix)
dataMatrix
set.seed(1234)
dataMatrix <- as.Matrix(dataFrame)[sample(1:12),]
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
kmeansObj2 <- kmeans(dataMatrix, centers = 3)
par(mfrow = c(1,2), mar =c(2,4,0.1,0.1))
image(t(dataMatrix)[, nrow(dataMatrix):1], yaxt = "n")
dataMatrix
image(t(dataMatrix)[, order(kmeansObj2$cluster)], yaxt = "n")
set.seed(12345)
par(mar = rep(0.2, 4))
dataMatrix <- matrix(rnorm(400))
dataMatrix <- matrix(rnorm(400), nrow = 40)
image(1:!0, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
heatmap(dataMatrix)
set.seed(678910)
for(i in 40){
coinFlip <- rbinom(1, size = 1, prob = 0.5)
if (coinFlip){
dataMatrix[i,] <- dataMatrix[i,] + rep(c(0, 3), each = 5)}}
heatmap(dataMatrix)
par(mar = rep(0.2, 4))
heatmap(dataMatrix)
dataMatrix[i,] <- dataMatrix[i,] + rep(c(0, 3), each = 5)}}
rep(c(0,5) 5)
rep(c(0,5), 5)
rep(c(0,5) 5)
rep(c(0,5), each = 5)
install.packages("impute")
source("https://bioconductor.org/biocLite.R")
bioclite
bioclite
biocLite
biocLite("impute")
library(impute)
?impute.knn
load("data/face.rda")
image(t(faceData))
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col = "blue")
abline(h=0.4, col = "red")
5
abline(h=0.05, col = "red")
12
abline(h=0.05, col = "green'")
abline(h=0.05, col = "green")
dist(dFsm)
hc
heatmap(dataMatrix, cm.colors(25))
heatmap(dataMatrix, col = cm.colors(25))
View(dataMatrix)
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx, cy, col = c("red", "orange", "purple", pch = 3, cex = 2, lwd = 2))
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols[newClust2])
points(x, y, pch = 19, cex = 2, col = cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x, y, col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% t(matv)
matu %*% diag ** t(matv)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2
svd2$d
svd2[, 1:2]
svd2$v[, 1:2]
svd$d
svd2$d
dim(faceData)
a1 <- svd1$u %*% svd1$d %*% svd1$v
a1 <- (svd1$u[,1] %*% svd1$d %*% svd1$v[,1])
a1 <- (svd1$u[,1] %*% svd1$d[1] %*% t(svd1$v[,1]))
a1 <- (svd1$u[,1] %*% svd1$d[1]) %*% t(svd1$v[,1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- (svd1$u[,1:2] %*% svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- (svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2]))
a2 <- (svd1$u[,1:2] %*% svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
Image(a2)
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
a5 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(a5)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
)
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[562:563])
ssd$subject
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
syb1 <- subset(ssd, subject == 1)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[:12])
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplcust(hclustering, lab.col = unclass(sub1$activity))
myplcust(hclustering, lab.col = unclass(sub1$activity))
source("myplclust.R")
myplcust(hclustering, lab.col = unclass(sub1$activity))
View(myplclust)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[, -c(562, 563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[, c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
sub1[maxCon'']
sub1[maxCon]
names(sub1[maxCon]
)
kClust <- kmeans(sub1[-c(562, 563)], centers = 6)
kClust <- kmeans(sub1[,-c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
table(kClust$cluster, sub1$activity, nstart = 100)
kClust <- kmeans(sub1[,-c(562, 563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- kClust$size == 29
laying <- which(kClust$size == 29)
plot(kClust$centers[laying, 1:12], pach = 19, ylab = "LayingCluster")
plot(kClust$centers[laying, 1:12], pach = 19, ylab = "Laying Cluster")
plot(kClust$centers[laying, 1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size == 49)
plot(kClustcenters[walkdown, 1:12], pch = 19, ylab = "Walkdown Cluster")
plot(kClust$centers[walkdown, 1:12], pch = 19, ylab = "Walkdown Cluster")
library(swirl())
swirl()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = T)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, data = airquality)
boxplot(Ozone~Month, data = airquality, xlab = "Month", ulab = "Ozone (ppb)", col.axis = "blue", col.lab = "red"")
)
)
""
boxplot(Ozone~Month, data = airquality, xlab = "Month", ulab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
boxplot(Ozone~Month, data = airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Ozone~Wind))
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
len(par())
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, set = "n")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, Month == 5)
points(may$Wind, may$Ozone, pch = 17, col = "blue")
points(may$Wind, may$Ozone, col = "blue", pch = 17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
legend("topright", pch = c(17,8), col = ("blue", "red"), legend = ("May", "Other Months"))
legend("topright", pch = c(17,8), col = ("blue", "red"), legend = c("May", "Other Months"))
legend("topright", pch = c(17,8), col = c("blue", "red"), legend = c("May", "Other Months"))
abline(v = median(airquality$Wind), lty = 2, lwd = 2)
pay(mfrow = c(1,2))
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, title = "Ozone and Wind")
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1,3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Solar Temperature")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
library(kernlab)
library("kernlab")
install.packages("kernlab")
library("kernlab")
data(spam)
set.seed(3435)
trainIndicator = rbinom(4601, size = 1, p = 0.5)
table(trainIndicator)
trainSpam <- spam[trainIndicator == 1,]
testSpam <- spam[trainIndicator == 0,]
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam$capitalAve) ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 1) ~ trainSpam$type)
newhCluster = hclust(dist(t(log10(trainSpam$[, 1:55]))))
newhCluster = hclust(dist(t(log10(trainSpam[, 1:55]))))
newhCluster = hclust(dist(t(log10(trainSpam[, 1:55] + 1))))
plot(newhCluster)
library(knitr)
install.packages("knitr")
?rev
?sort
knit2html()
library(knitr)
?knitr
?knit2html
knit2html("PA1_template.Rmd", "PA1_template.md")
knit2html("PA1_template.Rmd", "PA1_template.md")
knit2html("PA1_template.Rmd", "PA1_template.html")
Error: It seems you should call rmarkdown::render() instead of knitr::knit2html() because PA1_template.Rmd appears to be an R Markdown v2 document.
knit2html("PA1_template.Rmd", "PA1_template.html")
knit2html("PA1_template.Rmd", "PA1_template.html")
knit2html("PA1_template.Rmd", "NULL")
knit2html("PA1_template.Rmd", "NULL", force_v1 = T)
cd
ls
list.files()
cd RepData_PeerAssessment1
setwd("RepData_PeerAssessment1")
knit2html("PA1_template.Rmd", "PA1_template.md")
knit2html("PA1_template.Rmd", "PA1_template")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd", NULL)
knit2html("PA1_template.Rmd", force_v1 = T)
knit2html("PA1_template.Rmd", force_v1 = T)
